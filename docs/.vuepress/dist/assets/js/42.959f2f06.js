(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{175:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"js数据转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js数据转换","aria-hidden":"true"}},[s._v("#")]),s._v(" Js数据转换")]),s._v(" "),a("h2",{attrs:{id:"_1-parseint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-parseint","aria-hidden":"true"}},[s._v("#")]),s._v(" 1.parseInt():")]),s._v(" "),a("ul",[a("li",[s._v("parseInt() 函数解析一个字符串参数，并返回一个指定基数的整数 (数学系统的基础)。")]),s._v(" "),a("li",[s._v("parseInt 函数将其第一个参数转换为字符串，解析它，并返回一个整数或NaN。如果不是NaN，返回的值将是作为指定基数（基数）中的数字的第一个参数的整数。")]),s._v(" "),a("li",[s._v("在使用parseInt取整的时候，不是特别安全，它在某些方面无法做到返回正确结果：eg--\x3eparseInt('0.000000006') = 0;parseInt(0.00000060) = 6.")])]),s._v(" "),a("h2",{attrs:{id:"_2-math方法-对数字进行四舍五入或截断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-math方法-对数字进行四舍五入或截断","aria-hidden":"true"}},[s._v("#")]),s._v(" 2.Math方法:对数字进行四舍五入或截断")]),s._v(" "),a("ul",[a("li",[s._v("Math.trunc:会从小数点开始截取，而且不采用任何四舍五入方法。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.655")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("trunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.000000006")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("Math.round:")]),s._v(" "),a("li",[s._v("Math.ceil:")]),s._v(" "),a("li",[s._v("Math.floor：")])]),s._v(" "),a("h2",{attrs:{id:"_3-位运算-将操作数转换为32位有符号的数，然后对其进行位运算。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-位运算-将操作数转换为32位有符号的数，然后对其进行位运算。","aria-hidden":"true"}},[s._v("#")]),s._v(" 3.位运算:将操作数转换为32位有符号的数，然后对其进行位运算。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.655")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("此方法缺点在于对于输入的数字有要求，只能用于32位二进制能代表的，超过32位则会出错。(超过+/-2^32)")])]),s._v(" "),a("h2",{attrs:{id:"javascript-字符串转数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-字符串转数字","aria-hidden":"true"}},[s._v("#")]),s._v(" JavaScript 字符串转数字")]),s._v(" "),a("ol",[a("li",[s._v("paeseInt(num): 大多数浏览器都对 ParseInt 做过优化。虽然它可能是最快的一种方式，但是有可能会引起以下几种错误：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在一些老的浏览器里会返回 0 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'44.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 44")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("parseFloat():它在不处理 16 进制数字的时候，都发挥的很好；例子：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns -255")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-0xFF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns -255")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns -255")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-0xFF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("“按位取反” (~)。您仅可以使用它将字符串转换为整型，而不能转为浮点型数字。它比较好的一面是，当碰到非数字字符的时候，它会返回 0。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.23")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.23"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"23"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 23")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello world"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v('它 "翻转" 了每一个二进制位, 也被称为 A1 补数。你可以使用它，但是也要意识到它只能处理成整数。所以，除非你确定数值的范围在带符号 32 位整型之内（因为在规范里称为 ToInt32），就不要使用它。')]),s._v(" "),a("li",[s._v("按位取反，使用的时候确保不存在非数字字符，只可用做整型转换")])]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[s._v("Number():当它解析的时候，会试图从你给的字符中找出数字：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"023"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 23")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("023")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 19")]),s._v("\n注， "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("023")]),s._v(" 实际上是一个八进制数。不管你做什么，它都会返回 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("；对于没有引号的 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" 进制数来说，是一样的）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[s._v("一元操作")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.23"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 1.23")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0xFF"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 255")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0xFF.jpg"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"023"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// returns 23")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("一元操作会在处理非数字时，抛出一个 NaN 值。这也是我最喜欢的一种方式，因为一个字符不应该被考虑为 0 或者从它有多少位来猜测。大多数时候我会使用 + 操作，因为它是最不容易引起混乱的操作。不过一元操作并不是性能最好的一种方式 ——— 即使 -0 操作性能不错。")])])])}],!1,null,null,null);t.default=r.exports}}]);