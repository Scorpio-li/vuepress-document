(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{182:function(s,n,a){"use strict";a.r(n);var e=a(0),t=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"前端跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端跨域问题","aria-hidden":"true"}},[s._v("#")]),s._v(" 前端跨域问题")]),s._v(" "),a("h2",{attrs:{id:"_1-跨域的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-跨域的概念","aria-hidden":"true"}},[s._v("#")]),s._v(" 1. 跨域的概念")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("跨域是指去向一个为非本origin(协议、域名、端口任意一个不同)的目标地址发送请求的过程，这样之所以会产生问题是因为浏览器的同源策略限制。")])]),s._v(" "),a("li",[a("p",[s._v("目的：同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。")])]),s._v(" "),a("li",[a("p",[s._v("eg: 正常网站免登的请求流程")]),s._v(" "),a("ol",[a("li",[s._v("我们进入一个网站，发送登陆请求给后端")]),s._v(" "),a("li",[s._v("后端接受登陆请求，判断登陆信息是否准确")]),s._v(" "),a("li",[s._v("判断信息准确后后端后会发送response给浏览器并在response header中加入set-cookie字段")]),s._v(" "),a("li",[s._v("浏览器接受response返给用户，并将header中的cookie进行保存")]),s._v(" "),a("li",[s._v("用户关闭当前网站窗口后再次打开后，浏览器会自动将cookie加入request header实现免登")])])]),s._v(" "),a("li",[a("p",[s._v("若用户在登录了一个网站A后，所在浏览器就记录了该网站的回馈的cookie，这时如果用户点击了网站B的链接后有可能网站B就能通过浏览器设置的cookie向网站A发起请求，这就导致了安全隐患。")])])]),s._v(" "),a("h2",{attrs:{id:"_2-跨域的解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨域的解决方案","aria-hidden":"true"}},[s._v("#")]),s._v(" 2. 跨域的解决方案")]),s._v(" "),a("h3",{attrs:{id:"_1-jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-jsonp","aria-hidden":"true"}},[s._v("#")]),s._v(" 1. jsonp")]),s._v(" "),a("ul",[a("li",[s._v("最早的解决方案之一就是jsonp,实现方式是通过script标签传递数据，因为script请求不会被同源策略禁止，所以通过script标签去请求跨域数据，并且在script的cb对应func中实现对数据的获取是可行的,当然这种方式需要后端进行配合，后端在前端进行对应请求的时候返回对应的jsonp格式的数据\nphp案例如下:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<?php\nheader(\'Content-type: application/json\');\n//获取回调函数名\n$jsoncallback = htmlspecialchars($_REQUEST [\'jsoncallback\']);\n//json数据\n$json_data = \'["customername1","customername2"]\';\n//输出jsonp格式的数据\necho $jsoncallback . "(" . $json_data . ")";\n?>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("客户端用法如下:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(' <script type="text/javascript">\n\t\tfunction callbackFunction(result, methodName)\n        {\n            ///result 指向对应数据\n        }\n<\/script>\n<script type="text/javascript" src="http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction"><\/script>\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"_2-cors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cors","aria-hidden":"true"}},[s._v("#")]),s._v(" 2. CORS")]),s._v(" "),a("ul",[a("li",[s._v("跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器  让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。当一个资源从与该资源本身所在的服务器不同的域、协议或端口请求一个资源时，资源会发起一个跨域 HTTP 请求。")]),s._v(" "),a("li",[s._v("CORS又分为简单请求和预检请求")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("简单请求：mdn定义的简单请求就是某些不会触发cors预检的请求。")]),s._v(" "),a("ul",[a("li",[s._v("设置不会触发预检的Methods : GET、HEAD、POST。 GET和POST大家都很熟悉,不再赘述，解释下HEAD请求，HEAD就是只发送请求不会收到响应的一种请求方式，日常用的比较少")]),s._v(" "),a("li",[s._v("简单请求只可以设置如下header如下Accept、Accept-Language、Content-Language、Content-Type")]),s._v(" "),a("li",[s._v("Content-Type标头允许的值只能是：\napplication/x-www-form-urlencoded、\nmultipart/form-data、\ntext/plain")]),s._v(" "),a("li",[s._v('后端适配方案: 在respones header中添加Access-Control-Allow-Origin：Access-Control-Allow-Origin代表允许发送请求的源，参数可以是固定的白名单ip或者通配符,可以用通配符"*",代表接受所有请求。不过有种特殊情况是不能使用通配符的，就是前端请求header中含有withCredentials，withCredentials:true是跨域请求想要携带cookie必须加入的headers配置')])])]),s._v(" "),a("li",[a("p",[s._v("预检请求：预检请求就是在跨域的时候设置了对应的需要预检的内容,结果上会在普通跨域请求前添加了个options请求，用来检查前端headers的修改是否在后端允许范围内。")]),s._v(" "),a("ul",[a("li",[s._v("首先methods设置 PUT、DELETE、CONNECT、OPTIONS、TRACE会导致预检请求")]),s._v(" "),a("li",[s._v("设置了Accept、Accept-Language、Content-Language、Content-Type 之外的headers中任一的配置，比如常见的token:authorization,缓存机制cache-contorl")]),s._v(" "),a("li",[s._v("Content-Type设置了简单请求不允许的值，如常用的application/json")]),s._v(" "),a("li",[s._v("预检请求就需要后端设置更多的respones headers：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Access-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Methods: POST, GET\nAccess-Control-Allow-Headers: X-PINGOTHER, Content-Type\nAccess-Control-Max-Age: 86400\n\x3c!--Access-Control-Allow-Methods代表可接受methods--\x3e\n\x3c!--Access-Control-Allow-Headers代表可接受的headers修改--\x3e\n\x3c!--Access-Control-Max-Age代表预检的残留时间，代表预检之后可以免预检的时间--\x3e\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实现CORS的几种方式")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("本地代理：在dva中的实现方式是在.webpackrc中添加如下代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"proxy": {\n    "/api": {\n    "target": "http://127.0.0.1:8988/",\n    "changeOrigin": true,\n    "pathRewrite": { "^/api" : "" }\n    }\n}\n/api代表代理的路径名，\ntarget代表代理的地址，\nchangeOrigin代表更改发出源地址为target，\npathRewrite代表路径重写，\n别的脚手架直接加载webpack配置文件即可\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("nodejs中间件")]),s._v(" "),a("ol",[a("li",[s._v("用express脚手架生成express模具")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install express-generator -g\nexpress --view=pug myapp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("设置一个全局路由拦截")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("app.all('*', function (req, res, next) {\nres.header('Access-Control-Allow-Origin', '*');\nif (req.method == 'OPTIONS') {\nres.send(200);\n} else {\nnext();\n}\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("再设置对应的代理逻辑")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var options = {\ntarget: 'https://xxxx.xxx.xxx/abc/req',\nchangeOrigin: true,\npathRewrite: (path,req)=>{\n    return path.replace('/api','/')\n}\n}\napp.use('/api', proxy(options));\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("进入bin/www中设置对应的端口，或者在process.env.PORT设置port启动值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var port = normalizePort(process.env.PORT || '7002');\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[s._v("启动脚手架")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("DEBUG=myapp:* npm start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("Nginx跨域代理")]),s._v(" "),a("ul",[a("li",[s._v("nginx-http常见配置项如下:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("http {\n    #导入类型配置文件\n    include       mime.types;\n    #设定默认类型为二进制流\n    default_type  application/octet-stream;\n    #启用sendfile()函数\n    sendfile        on;\n    #客户端与服务器连接的超时时间为65秒，超过65秒，服务器关闭连接\n    keepalive_timeout  65;\n    #是否开启gzip，默认关闭\n    #gzip  on;\n    #一个server块\n    server {\n        #服务器监听的端口为80\n        listen       80;\n        #服务器名称为localhost，我们可以通过localhost来访问这个server块的服务\n        server_name  localhost;\n        #location块，它存放在server块当中，location会尝试根据用户请求中的URI来匹配上面的/uri表达式，如果可以匹配，就选择location {}块中的配置来处理用户请求。\n        location / {\n            #以root方式设置资源路径，它与alias的不同请见下面的 http模块中文件路径定义\n            root   html;\n            #默认访问的页面，从左依次找到右，直到找到这个文件，然后返回结束请求\n            index  index.html index.htm;\n            #设置错误页面，对应的错误码是404，错误页面是/Users/user/Sites/404.html\n            error_page 404  /404.html;\n        }\n    }\n    include servers/*;\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("ul",[a("li",[s._v("实现反向代理的方式:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n        listen       80;\n    server_name  localhost;\n    location / {\n            root   /Users/abc/dist/;\n            index  index.html index.htm;\n        }\n\n        location /api/ {\n                proxy_pass  https://xxx.xxx.xxx/req/;\n        }\n}\nlocation中的后的内容会尝试根据用户请求中的URI来匹配上面的/uri表达式，如果可以匹配，就选择location {}块中的配置来处理用户请求\n\n本项目中第一个location用于指向静态资源位置 root:目录,index:入口文件,第二个location用于进行api的跨域指向\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("拓展话题 nginx还可以用于实现多入口")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n        listen       80;\n    server_name  www.aaa.com;\n        location /api/ {\n                proxy_pass  http://localhost:7001;\n        }\n}\nserver {\n        listen       80;\n    server_name  www.bbb.com;\n        location /api/ {\n                proxy_pass  http://localhost:7002;\n        }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])])])]),s._v(" "),a("h3",{attrs:{id:"_3-解决方案的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决方案的对比","aria-hidden":"true"}},[s._v("#")]),s._v(" 3.解决方案的对比")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("json只支持get请求，无法支持复杂的请求")])]),s._v(" "),a("li",[a("p",[s._v("jsonp出现错误的时候，很难去进行错误识别与处理，cors可以正常错误捕捉")])]),s._v(" "),a("li",[a("p",[s._v("jsonp的兼容性比较高，而cors在旧版ie中需要寻找对应的替代方案")])])])])}],!1,null,null,null);n.default=t.exports}}]);